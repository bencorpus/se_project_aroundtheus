!function(){"use strict";var e=class{constructor(e,t,s){this._name=e.name,this._link=e.link,this._likeButton=this,this._deleteButton=this,this._cardSelector=t,this._handlePreviewClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._element.querySelector(".card__image").addEventListener("click",(()=>{this._handlePreviewClick(this._name,this._link)})),this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._likeButton.addEventListener("click",(()=>this.togglelikeButton())),this._deleteButton.addEventListener("click",(()=>this.remove()))}togglelikeButton(){this._likeButton.classList.toggle("card__like-button_active")}remove(){this._element.remove()}getView(){return this._element=this._getTemplate(),this._element.querySelector(".card__image").src=this._link,this._element.querySelector(".card__image").alt=this._name,this._element.querySelector(".card__title").textContent=this._name,this._setEventListeners(),this._element}};class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._form=t,this._errorClass=e.errorClass}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_toggleButtonState(){this._inputList.some((e=>!e.validity.valid))?this.disableButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputList=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}}class s{constructor(e){let{modalSelector:t}=e;this._modalElement=document.querySelector(t)}open(e){this._modalElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose),this._modalElement.addEventListener("click",this._handleCloseOverlay)}close(e){this._modalElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose),this._modalElement.removeEventListener("click",this._handleCloseOverlay)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};_handleCloseOverlay=e=>{e.target.classList.contains("modal_opened")&&this.close()};setEventListeners(){this._modalElement.querySelector(".modal__close").addEventListener("click",(()=>{this.close()}))}}class o extends s{constructor(e,t){super({modalSelector:e}),this._handleFormSubmit=t,this._form=this._modalElement.querySelector(".modal__form")}_getInputValues(){return this._inputList=this._modalElement.querySelectorAll(".modal__input"),this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}const n=document.querySelector("#profile-edit-button"),i=document.querySelector("#profile-edit-modal"),r=(document.querySelector("#modal-close-button"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-title-input")),l=document.querySelector("#profile-description-input"),a=i.querySelector(".modal__form"),c=document.querySelector(".profile__add-button"),d=document.querySelector("#add-card-modal"),m=(document.querySelector("#add-image-close-button"),document.querySelector(".modal__input_type_title"),document.querySelector(".modal__input_type_url"),document.querySelector("#image-title-input"),document.querySelector("#image-description-input"),document.querySelector(".cards__list"),d.querySelector(".modal__form")),u=(document.querySelector("#card-image-modal"),document.querySelector(".modal__image"),document.querySelector(".modal__description"),document.querySelector("#image-modal-close-button"),{inputSelector:".modal__input",submitButtonSelector:".modal__button-save",inactiveButtonClass:"modal__button-save_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"}),_=new class{constructor(e,t){this._nameElement=document.querySelector(e),this._descriptionElement=document.querySelector(t)}getUserInfo(){return{name:this._nameElement.textContent,job:this._descriptionElement.textContent}}setUserInfo(e){let{name:t,description:s}=e;this._nameElement.textContent=t,this._descriptionElement.textContent=s}}(".profile__title",".profile__description"),h=new class extends s{constructor(e){let{modalSelector:t}=e;super({modalSelector:t}),this._modalImage=this._modalElement.querySelector(".modal__preview-image"),this._modalTitle=this._modalElement.querySelector(".modal__preview-image-title")}open(e){this._modalImage.src=e.link,this._modalImage.alt=e.name,this._modalTitle.textContent=e.name,super.open()}}({modalSelector:"#preview-image-modal"});function p(e,t){const s={name:e,link:t};h.open(s)}n.addEventListener("click",(()=>{const e=_.getUserInfo();r.value=e.name,l.value=e.job})),h.setEventListeners();const v=new class{constructor(e,t){let{items:s,renderer:o}=e;this._items=s,this._renderer=o,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:S},".cards__list");function S(t){const s=new e(t,"#card-template",p).getView();v.addItem(s)}v.renderItems();const E=new o("#add-card-modal",(e=>{S({name:e.title,link:e.url}),E.close(),m.reset(),g.disableButton()}));E.setEventListeners(),c.addEventListener("click",(()=>{E.open()}));const y=new o("#profile-edit-modal",(e=>{_.setUserInfo({name:e.title,description:e.description}),y.close(),a.reset()}));y.setEventListeners(),n.addEventListener("click",(()=>{y.open()}));const g=new t(u,m);g.enableValidation(),new t(u,a).enableValidation(),fetch("https://around-api.en.tripleten-services.com/v1/cards",{headers:{authorization:"adf20b83-7f1d-480d-901e-a1cb3edace17"}}).then((e=>e.json())).then((e=>{console.log(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,